[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/vignette-pulling-data.html","id":"intro-the-ojo-database","dir":"Articles","previous_headings":"","what":"Intro: The OJO database","title":"Pulling court data with ojodb","text":"Many projects requests involve pulling court data OJO database. organizations authorities collected type data Oklahoma, ’re somewhat unique amount data tools ’ve developed pull analyze . court data comes two sources: Oklahoma State Court Network website, official record populous organized counties state, Demand Court Records website, alternate official record used less populous counties. scrape data posted websites day, store contents database. data scraped wrangled like lets us answer questions harder get handle otherwise. example, legislators stakeholders often want know things like “many felonies filed 2016-2022?”, “eviction filings change COVID, result X policy change?” can shockingly hard answer even basic questions like , even government officials, ’s database comes ! get idea use database answer kinds questions, vignette walk steps hypothetical research question.","code":""},{"path":"/articles/vignette-pulling-data.html","id":"research-question","dir":"Articles","previous_headings":"Intro: The OJO database","what":"Research Question:","title":"Pulling court data with ojodb","text":"many misdemeanor cases involving drugs filed Oklahoma Tulsa county month 2016-2022?","code":""},{"path":"/articles/vignette-pulling-data.html","id":"before-you-proceed","dir":"Articles","previous_headings":"Intro: The OJO database","what":"Before you proceed:","title":"Pulling court data with ojodb","text":"vignette assumes ) ’ve already installed ojodb, B) credentials access database properly configured – ojodb functions won’t work . can bit tricky get working, please ask help issues!","code":""},{"path":"/articles/vignette-pulling-data.html","id":"step-1-getting-the-lay-of-the-land","dir":"Articles","previous_headings":"","what":"Step 1: Getting the lay of the land","title":"Pulling court data with ojodb","text":"Just educational purposes, ’ll start taking look around database seeing exactly court data lives. database divided “schemas” – database big filing cabinet, can imagine schemas separate drawers. can see using ojo_list_schemas() function. schema, generally speaking, relates one data types / topics / policy areas. one contains tables store data related policy area. Among others, : schema ocdc (Oklahoma County Detention Center, .e. jail Oklahoma City), another one odoc (Oklahoma Department Corrections, .e. Oklahoma state prisons), another eviction_addresses (one contains data related specific eviction-related project) court data ’re interested right now stored default schema, public. Let’s open “drawer” see kind data inside. schema drawer filing cabinet, tables folders inside. public schema contains several different tables, relate back court data. important ones know: case table contains basic information case. includes variables like case number, date filed, judge assigned , etc. also includes ID columns allow join tables schema order see things like defendant’s name DOB, attorneys involved, etc. row one case. count table contains individual charges filed case; cases involve one. row one charge. minute table contains court minutes case. get data court fines fees, among many things. ton minutes per case, working minute data often means spend lot time waiting data download. row one court minute. can see exactly variables included table using ojo_list_vars() function. example, let’s take closer look main case table: ’re interested criminal cases right now, ’ll pulling data table example research question.","code":"# Load the library if you haven't already: # library(ojodb)  ojo_list_schemas() #> # A tibble: 12 × 1 #>    schema             #>    <chr>              #>  1 archive            #>  2 doc_tracker        #>  3 eviction_addresses #>  4 eviction_dashboard #>  5 iic                #>  6 ocdc               #>  7 ocdc_new           #>  8 odoc               #>  9 oscn               #> 10 oscn_test          #> 11 ppb                #> 12 public ojo_list_tables(schema = \"public\") #> # A tibble: 20 × 2 #>    schema table            #>    <chr>  <chr>            #>  1 public _sqlx_migrations #>  2 public address          #>  3 public appellate_count  #>  4 public attorney         #>  5 public attorney_address #>  6 public case             #>  7 public case_type        #>  8 public citation         #>  9 public count            #> 10 public document         #> 11 public event            #> 12 public exception_log    #> 13 public issue            #> 14 public marital_status   #> 15 public migrations       #> 16 public minute           #> 17 public party            #> 18 public person_record    #> 19 public process_log      #> 20 public representation ojo_list_vars(schema = \"public\", table = \"case\") #> # A tibble: 21 × 1 #>    column_name          #>    <chr>                #>  1 appealed_from        #>  2 attorneys            #>  3 case_number          #>  4 case_type            #>  5 citation_information #>  6 counts               #>  7 created_at           #>  8 date_closed          #>  9 date_filed           #> 10 district             #> # ℹ 11 more rows"},{"path":"/articles/vignette-pulling-data.html","id":"step-2-pulling-our-data-ojo_crim_cases","dir":"Articles","previous_headings":"","what":"Step 2: Pulling our data – ojo_crim_cases()","title":"Pulling court data with ojodb","text":"Now understand basic layout database, can start pulling data ’re interested ! Fortunately, helper functions save us think much schemas tables daily work. Keeping research question mind, ’ll start pulling misdemeanor criminal cases filed Oklahoma Tulsa counties 2016-2022. ’ll use one helper functions, ojo_crim_cases(), . first queries case table, combines table cases case’s charges count table. collect() function ’re using dplyr package. helper function ojo_crim_cases() uses provided arguments put together query database, collect() function executes query returns result lazy tibble R environment. wanted , add additional filtering, sorting, etc. adding dplyr functions like filter(), select(), etc. collect() call. now, want see everything.","code":"# This function combines the \"case\" and \"count\" tables in our database, # and returns a cleaned dataframe where each row is one charge in a case. charge_data <- ojo_crim_cases(districts = c(\"OKLAHOMA\", \"TULSA\"),                               case_types = \"CM\", # \"CM\" is short for \"criminal misdemeanor\"                               file_years = 2016:2022) |>   # you can add things like filter(), select(), etc. here   collect()"},{"path":"/articles/vignette-pulling-data.html","id":"exploring-the-data-weve-pulled","dir":"Articles","previous_headings":"Step 2: Pulling our data – ojo_crim_cases()","what":"Exploring the data we’ve pulled","title":"Pulling court data with ojodb","text":"Now ’ve got data saved object charge_data, nice! anything else, let’s start taking look dataframe RStudio using View() function (just clicking RStudio “Data” panel).","code":""},{"path":"/articles/vignette-pulling-data.html","id":"charges-vs--cases","dir":"Articles","previous_headings":"Step 2: Pulling our data – ojo_crim_cases()","what":"Charges vs. Cases?","title":"Pulling court data with ojodb","text":"’ll probably notice dataframe includes data individual charges case, stored count_as_filed disposition. discussed , ’s often going one charge involved given case, means note data terms charges, cases. Let’s start seeing many : looks like charge_data includes 169,063 rows. words, data shows 169,063 total charges filed Oklahoma Tulsa county misdemeanor cases 2016-2022. hand, looks like 62,205 unique combinations district case_number (equal number rows new summary dataframe, case_summary). words, data shows 62,205 total misdemeanor cases filed Oklahoma Tulsa county 2016-2022. wanted , divide numbers (use handy case_summary dataframe) see average number charges per case: seems ’s average 2.72 counts per misdemeanor case dataset. Neat! ’s helpful always thinking rows data represent. Keeping track exactly ’re looking (charges, cases, defendants, etc.) can one challenging parts analyses, especially client isn’t exactly sure want know .","code":"# How many total charges? ------------------------------------------------------ # The data are already in terms of charges (1 charge per row), so we can simply # count the rows. charge_data |>   nrow() #> [1] 169063  # How many total cases? -------------------------------------------------------- # There's more than one charge per case sometimes, so we need to see how many # unique cases there are total. Here are two possible approaches:  # Approach #1: Creating a new, unique district + case_number variable charge_data |>   # Case numbers are unique within districts;   # e.g. Tulsa's CM-2023-001 is a different case than Oklahoma's CM-2023-001.   # We can create a new variable that will always be unique -- district + case_number   mutate(case_number_with_district = paste(district, case_number)) |>   distinct(case_number_with_district) |>   nrow() #> [1] 62205  # This approach returns the number of unique case_number / district combinations, # but not much else.  # Approach 2: Making a new summary dataset with group_by() + summarize() case_summary <- charge_data |>   group_by(district, case_number) |>   summarize(     n_charges = n()     # Note: if you want, you can add further summary variables here.     # For example, maybe you want to know how many charges in each case led to     # a conviction. You could do something like this:     # n_convictions = sum(disposition == \"CONVICTION\", na.rm = T)   )  nrow(case_summary) #> [1] 62205  # This tells us the number, and also leaves us with a helpful new case_summary # dataset that we can use later on, if we want to know more. # Total charges / total cases = Avg. number of charges per case nrow(charge_data) / nrow(case_summary) #> [1] 2.717836  # Different approach, same thing mean(case_summary$n_charges) #> [1] 2.717836"},{"path":"/articles/vignette-pulling-data.html","id":"did-we-get-everything-we-asked-for","dir":"Articles","previous_headings":"Step 2: Pulling our data – ojo_crim_cases()","what":"Did we get everything we asked for?","title":"Pulling court data with ojodb","text":"Though data coverage quality checks already part scrapers database, court data always extremely messy, can lead unforeseen issues. Knowing , ’s usually good idea double check data ’ve pulled order ensure ojo_crim_cases() returned data requested. least check data geographically temporally; words, make sure aren’t weird, unexpected differences counties filing years / months. exactly due diligence , one potential approach make quick visualization two. example: graph looks pretty much ’d expect – ’s huge difference Oklahoma Tulsa counties (makes sense, given ’re similar size), aren’t conspicuously missing months, suspiciously massive sudden spikes / drops, etc. lot variation (particularly Oklahoma county), ’s nothing looks suspicious enough suspect data issue. great absolute source truth use double check stuff reliably. internal data quality monitoring dashboard serves purpose list goals, hopefully serve easy reference point future. now, part process looking data different angles thinking critically might run potential issues, issues might show testing. Referencing past OKPI work also another good option, asking another analyst familiar data area.","code":"library(lubridate) library(ggplot2)  # We're going to look at charges, not cases here charge_data |>   mutate(     # Our end goal is to see monthly filings, so we'll use that same timeframe     month_filed = floor_date(date_filed, \"months\")   ) |>   count(district, month_filed) |> # Our two most important checks, geography and time   ggplot(aes(x = month_filed,              y = n)) +   # I'm choosing geom_col() over geom_line() because I want to see any gaps clearly   geom_col() +   facet_wrap(~district) +   scale_y_continuous(limits = c(0, NA)) +   labs(title = \"Total charges filed per month in CM cases\")"},{"path":"/articles/vignette-pulling-data.html","id":"back-to-our-research-question","dir":"Articles","previous_headings":"Step 2: Pulling our data – ojo_crim_cases()","what":"Back to our research question","title":"Pulling court data with ojodb","text":"Now ’ve got big dataset charges care (charge_data) another big dataset cases care (case_summary), ’ve familiarized look like mean, ’ve double checked data . Let’s revisit research question now see cleaning wrangling need order finish answering . many misdemeanor cases involving drugs filed Oklahoma Tulsa county month 2016-2022? ’ve got “misdemeanor cases filed Oklahoma Tulsa county 2016-2022” part , ’re still missing things. Namely, still need filter data include cases involving drugs, still need calculate number cases filed per month timespan. ’ll move steps next.","code":""},{"path":[]},{"path":"/articles/vignette-pulling-data.html","id":"searching-for-drug-related-charges","dir":"Articles","previous_headings":"Step 3: Wrangling, cleaning, and analyzing the data","what":"Searching for drug-related charges","title":"Pulling court data with ojodb","text":"First, ’ll need limit dataset cases involving drugs. exactly mean? want kind case least one charges drug-related, cases charges drug related? exactly count “drug-related” charges, anyway? Frequently, partners make vague asks like leave us answer questions. ’ll also notice data count_as_filed column messy, won’t able something simple filter(count_as_filed == \"Drug Possession\"). ’ll need find way parsing text order find charges need. answers methodology questions depend exact task hand, goal make research methodology standardized replicable possible. also means don’t want re-invent wheel – Open Justice Oklahoma done lots work drug laws past, fairly well established way searching statutes relevant charges. places can go see OJO handled methodology / data issues past: Oklahoma Policy Institute Stack Overflow site Q/format like Stack Overflow know love. run new issue don’t documented , feel free add questions / answers needed! Searching Open Justice Oklahoma Github repos keywords can sometimes turn past work, especially ’re dealing technical coding issue. Oklahoma Policy Institute blog page finished products ’ve helped put past, work evictions, drug laws, felony reclassification, fines fees, etc. , course, please don’t hesitate ask Slack! ’s easy things get lost shuffle make documentation anywhere, despite efforts, still lot things live inside someone’s brain. case, ’re going use regex string OJO’s founder Ryan Gentzler originally wrote find kind drug-related charge, including things like paraphernalia, trafficking, etc. ’s string: writing vignette, found searching “drugs” “marijuana” Github. really lot easier streamlined , though, future hopefully integrated part ojodb package. ’ll start adding new variable simply classifies charge drug-related . Note inclusion ignore.case = TRUE! Although data count_as_filed column uppercase, shouldn’t assume anything court data uniform. Much hand-entered county clerks, frequent typos, differences phrasing districts, random lowercase entries, etc. messy, means vigilant comes double-checking work making many assumptions data. , let’s stop check make sure result looks expect . looks like regex search pretty successful! Although may raise new questions: driving influence count? alcohol technically “drug” cases, different? count description says “Carrying firearm influence o drugs alcohol”? always going questions like , ’ll find start digging double-checking data. end, want prioritize standardization giving client whatever actually want / need (even help figure exactly ). now, ’ll just accept result -, point might need stop, re-assess things, ask analysts / policy team thoughts, follow client, etc.","code":"drugs <- \"CDS|C\\\\.D\\\\.S|DRUG|OXY|HUFF|AMPHET|ZOLOL|ZOLAM|HYDROC|CODEIN|PRECURS| |XANAX|MORPH|METERDI|ZEPAM|LORAZ|VALIU|EPHED|SUB|COCA|PSEUDO| CD|CD |PRESCRIP| |NARC|METH|C\\\\.D\\\\.|HEROIN|ANHYD|AMMONIA|OPIUM|LORTAB|MARIJUANA|CANNABIS|MJ\" # We'll save it as a new dataframe, charge_data_cleaned charge_data_cleaned <- charge_data |>   select(-c(id, counts, open_counts)) |> # We don't need every column, so let's drop the extras   mutate(     drug_charge = grepl(pattern = drugs, # Do any of our \"drug\" strings...                         x = count_as_filed, # ...show up in count_as_filed?                         ignore.case = TRUE) # ignore.case is important!   ) charge_data_cleaned |>   select(district, case_number, count_as_filed, drug_charge) |>   group_by(drug_charge) |>   slice_sample(n = 10) # We'll just look at a random sample of 10 in each category #> # A tibble: 20 × 4 #> # Groups:   drug_charge [2] #>    district case_number  count_as_filed          drug_charge #>    <chr>    <chr>        <chr>                   <lgl>       #>  1 OKLAHOMA CM-2019-3729 ABDOM, DOMESTIC ASSAUL… FALSE       #>  2 OKLAHOMA CM-2016-174  FFP, OBTAINING MONEY O… FALSE       #>  3 TULSA    CM-2018-2120 DI5, TRANSPORTING OPEN… FALSE       #>  4 TULSA    CM-2016-2639 WE6, TRANSPORTING LOAD… FALSE       #>  5 TULSA    CM-2018-5596 OBS, OBSTRUCTING AN OF… FALSE       #>  6 TULSA    CM-2022-3716 LMFR, LARCENY OF MERCH… FALSE       #>  7 OKLAHOMA CM-2021-3261 OBS, OBSTRUCTING AN OF… FALSE       #>  8 OKLAHOMA CM-2018-2871 OWN, MAKING A FALSE DE… FALSE       #>  9 OKLAHOMA CM-2022-3214 DI5, TRANSPORTING AN O… FALSE       #> 10 OKLAHOMA CM-2017-396  FR5, FAILURE TO CARRY … FALSE       #> 11 OKLAHOMA CM-2019-2013 DU9, POSSESSION OF A C… TRUE        #> 12 TULSA    CM-2016-5534 DI2DM, DUI DRUGS (MUNI… TRUE        #> 13 OKLAHOMA CM-2022-1459 DR3, UNLAWFUL POSSESSI… TRUE        #> 14 OKLAHOMA CM-2019-1679 DU9II, POSSESSION OF A… TRUE        #> 15 OKLAHOMA CM-2021-1077 DR3, UNLAWFUL POSSESSI… TRUE        #> 16 OKLAHOMA CM-2019-1648 DU9, POSSESSION OF A C… TRUE        #> 17 TULSA    CM-2018-95   DR3, POSSESSION OF DRU… TRUE        #> 18 TULSA    CM-2018-2695 DR3, POSSESSION OF DRU… TRUE        #> 19 OKLAHOMA CM-2022-2759 DR3, UNLAWFUL POSSESSI… TRUE        #> 20 TULSA    CM-2018-2544 DR3MV, POSSESSION OF D… TRUE"},{"path":"/articles/vignette-pulling-data.html","id":"summarizing-drug-charges-within-cases","dir":"Articles","previous_headings":"Step 3: Wrangling, cleaning, and analyzing the data","what":"Summarizing drug charges within cases","title":"Pulling court data with ojodb","text":"one wrangling task need figure – know counts drug charge, drug case? purposes, ’ll say drug case means case involving least one drug charge. Therefore, ’re going make another version case_summary dataframe, time new variable drug_charges_present: ’ll also save new dataframe includes drug cases. can double check result just like , see many drug cases total: Nice! Now nice, clean datasets visualize. stage analysis tough sometimes; involves lot subjective decision-making, lot making messy data, lot double-checking work. even though ’re aiming standardized methods, ’s also one areas get exercise little bit creativity come solutions things, feel free blaze path little bit !","code":"case_summary_cleaned <- charge_data_cleaned |>   group_by(district, case_number) |>   # We want to keep the date_filed, so we'll use transmute() this time instead of summarize()   transmute(     date_filed = date_filed,     # It will be helpful to have all the values of count_as_filed verbatim for double-checking     list_all_charges = paste(count_as_filed, collapse = \"; \"),     n_total_charges = n(),     # Count the number of rows where drug_charge == TRUE     n_drug_charges = sum(drug_charge, na.rm = TRUE),     drug_charges_present = if_else(n_drug_charges > 0, TRUE, FALSE)   ) |>   ungroup() |>   distinct() # transmute() leaves duplicate rows, so we'll drop those  # Alternative approach: # case_summary_cleaned <- charge_data_cleaned |> #   group_by(district, case_number) |> #   summarize( #     date_filed = unique(date_filed), #     list_all_charges = paste(count_as_filed, collapse = \"; \"), #     n_total_charges = n(), #     n_drug_charges = sum(drug_charge, na.rm = TRUE), #     drug_charges_present = if_else(n_drug_charges > 0, TRUE, FALSE) #   ) |> #   ungroup() case_summary_cleaned_drugs <- case_summary_cleaned |>   filter(drug_charges_present)  case_summary_cleaned |>   group_by(drug_charges_present) |>   slice_sample(n = 10) #> # A tibble: 20 × 7 #> # Groups:   drug_charges_present [2] #>    district case_number  date_filed list_all_charges         #>    <chr>    <chr>        <date>     <chr>                    #>  1 TULSA    CM-2016-3206 2016-06-23 OBS, OBSTRUCTING AN OFF… #>  2 OKLAHOMA CM-2020-1346 2020-05-19 OBS, OBSTRUCTING AN OFF… #>  3 TULSA    CM-2021-1960 2021-06-02 TLCIFM, TRESPASS ON RAI… #>  4 TULSA    CM-2016-3210 2016-06-23 OBS, OBSTRUCTING AN OFF… #>  5 OKLAHOMA CM-2019-2666 2019-08-13 FR5, FAILURE TO CARRY V… #>  6 OKLAHOMA CM-2021-3799 2021-12-28 LMFR, LARCENY OF MERCHA… #>  7 OKLAHOMA CM-2018-709  2018-02-23 DR1, BEING INTOXICATED … #>  8 OKLAHOMA CM-2017-2036 2017-06-15 DISDEC, DISTRUBING THE … #>  9 TULSA    CM-2022-1368 2022-04-25 FFP, FALSE PRETENSE UND… #> 10 OKLAHOMA CM-2022-1462 2022-05-12 ALC211, SELLING, FURNIS… #> 11 OKLAHOMA CM-2019-795  2019-03-06 DI1, DRIVING WHILE UNDE… #> 12 OKLAHOMA CM-2021-2385 2021-08-24 RCSP, RECEIVE, POSSESS … #> 13 TULSA    CM-2018-1467 2018-04-04 DI2D, DUI DRUGS; DU4II,… #> 14 OKLAHOMA CM-2020-454  2020-02-27 DU9II, UNLAWFUL POSSESS… #> 15 OKLAHOMA CM-2022-1249 2022-04-19 DU9, UNLAWFUL POSSESSIO… #> 16 TULSA    CM-2017-3743 2017-08-17 DU9, POSSESSION OF CONT… #> 17 OKLAHOMA CM-2019-275  2019-01-22 DU9IV, POSSESSION OF A … #> 18 TULSA    CM-2019-3339 2019-07-24 DU9II, POSSESSION OF CO… #> 19 OKLAHOMA CM-2021-616  2021-03-10 DI1, DRIVING UNDER THE … #> 20 TULSA    CM-2017-421  2017-01-27 DU4, POSSESSION OF CONT… #> # ℹ 3 more variables: n_total_charges <int>, #> #   n_drug_charges <int>, drug_charges_present <lgl>  # view(case_summary_cleaned)  # What proportion of these CM cases feature a drug charge? nrow(case_summary_cleaned_drugs) / nrow(case_summary_cleaned) #> [1] 0.260381"},{"path":"/articles/vignette-pulling-data.html","id":"step-4-visualizing-and-exporting-the-data","dir":"Articles","previous_headings":"","what":"Step 4: Visualizing and exporting the data","title":"Pulling court data with ojodb","text":"finish things , ’re going make nice, pretty graph showing many drug cases filed month throughout timespan data. ’ll using ojo_theme() ojo_colors() functions ojodb take care styling. Looking good! ’re curious increase seen around July 2017, can read happened . also frequently need send data spreadsheet form. ’ll typically want export datasets using readr package whatever format client needs. good default option old friend Comma Separated Values format, .csv. , ’d write_csv(case_summary_cleaned_drugs, \"export-data.csv\"). Exporting Microsoft Excel spreadsheet format .xlsx require readxl package.","code":"case_summary_cleaned_drugs |>   mutate(     month_filed = floor_date(date_filed, \"months\")   ) |>   count(month_filed, district) |>   ggplot(aes(x = month_filed,              y = n,              color = district)) +   geom_line() +   scale_y_continuous(limits = c(0, NA)) + # Usually we want to show the y-axis down to zero   ojo_theme() +   ojo_color() +   labs(     title = \"CM cases involving at least one drug charge,\",     subtitle = \"Oklahoma and Tulsa county district courts, 2016-2022\",     x = \"Month of case filing\",     y = \"Total drug cases filed\",     caption = \"Source: Open Justice Oklahoma analysis     of Oklahoma State Court Network (OSCN.net) data.\",     color = \"District\"   )"},{"path":"/articles/vignette-pulling-data.html","id":"step-5-review-and-deliver","dir":"Articles","previous_headings":"","what":"Step 5: Review and deliver","title":"Pulling court data with ojodb","text":"last step process submit work review. Ideally, try make sure everything least two people (analyst reviewer) look send client publish . review process check every step process, include needed discussions methodological questions talked earlier. ’re aiming start reviews via Github. process essentially : Open pull request code. Request reviewer pull request, let know ’re ready look via Slack, etc. pull code GitHub run locally machine, checking step process along way. notes, changes, etc. included review GitHub, can see everything one convenient place. edits addressed, can merge pull request ’ll nice finished product main branch! , ’ll write email (whatever delivery method relevant) send data / visualizations whoever needs . wrote correctly managed follow along, congratulations us! ’ve successfully learned pull court data OJO database use answer research question legal system. ’ll probably run lot things aren’t covered vignette tackle new questions use new parts data, hopefully useful resource ’re starting . Just remember – data quirky, ’s always going stuff don’t know problems aren’t sure solve. Whether ’s methodology issue, coding issue, “dealing client” kind issue, whenever find spinning wheels, please don’t hesitate just ask! ’s good chance OJO , , ’ll figure together. Thanks reading!","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brancen Gregory. Maintainer, author. Ryan Gentzler. Author. Andrew Bell. Author. Anthony Flores. Author. Elizabeth Spencer. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gregory B, Gentzler R, Bell , Flores (2025). ojodb: Analyze Data Open Justice Oklahoma Database. R package version 2.11.0, https://github.com/openjusticeok/ojodb.","code":"@Manual{,   title = {ojodb: Analyze Data from the Open Justice Oklahoma Database},   author = {Brancen Gregory and Ryan Gentzler and Andrew Bell and Anthony Flores},   year = {2025},   note = {R package version 2.11.0},   url = {https://github.com/openjusticeok/ojodb}, }"},{"path":"/index.html","id":"ojodb-","dir":"","previous_headings":"","what":"Analyze Data from the Open Justice Oklahoma Database","title":"Analyze Data from the Open Justice Oklahoma Database","text":"ojodb package assists Open Justice Oklahoma analysts access analyze court, jail, prison, data collected various sources. pkgdown website ojodb package can found .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze Data from the Open Justice Oklahoma Database","text":"Install devtools package don’t yet, install ojodb package GitHub : installation, can update commands.","code":"if (!\"devtools\" %in% installed.packages()) {   install.packages(\"devtools\") }  devtools::install_github(\"openjusticeok/ojodb\")"},{"path":"/index.html","id":"purpose-and-goals","dir":"","previous_headings":"","what":"Purpose and Goals","title":"Analyze Data from the Open Justice Oklahoma Database","text":"goal Open Justice Oklahoma collect analyze hard--access data order better understand state’s justice system. backbone work database, consists administrative data, produced court’s daily activities, gathered mainly courts, jails, prisons across state. data collected variety methods including webscraping database file downloads. ojodb package built give analysts way access data analyze using shared methodological standards. data analyze mostly administrative data generated case--case uses, always messy contains errors. OJO’s work depends processes work around imperfections order extract useful information, acknowledging limitations data. data sources, OJO processes periodically pull new data database. example, OSCN scrapers set periodically visit small claims case pages like one every days, gathering new data appears course case. Example case ’re generally interested happens single case, rather aggregate trends county state level. case linked , instance, see eviction case filed January 2, 2019, granted default judgment January 11. can use small claims data collected OSCN ODCR figure many eviction cases filed, resulted judgment, dismissed. information isn’t compiled anywhere else, database gives us unique opportunity understand really happening, day day close real-time, Oklahoma’s justice system. addition court data, available OSCN near-real time, collect data Oklahoma Department Corrections, Tulsa County Jail, Oklahoma County Jail, Pardon Parole Board, sources.","code":""},{"path":"/index.html","id":"guides-and-resources","dir":"","previous_headings":"","what":"Guides and Resources","title":"Analyze Data from the Open Justice Oklahoma Database","text":"documentation, like everything else, work progress. See article using ojodb pull data Oklahoma State Court Network – vignette(\"vignette-pulling-data\") general Open Justice Oklahoma documentation website – https://ojo-documentation-ie5mdr3jgq-uc..run.app/ Open Justice Oklahoma public-facing website – https://openjustice.okpolicy.org/ Oklahoma Policy Institute Stackoverflow Teams site – https://stackoverflowteams.com/c/oklahoma-policy-institute/questions","code":""},{"path":"/reference/get_connection_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Connection Object — get_connection_object","title":"Get Connection Object — get_connection_object","text":"Gets connection object environment specified .env argument.","code":""},{"path":"/reference/get_connection_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Connection Object — get_connection_object","text":"","code":"get_connection_object(env, key)"},{"path":"/reference/get_connection_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Connection Object — get_connection_object","text":"env environment search connection object.","code":""},{"path":"/reference/ojo_add_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add counts to a tibble of cases — ojo_add_counts","title":"Add counts to a tibble of cases — ojo_add_counts","text":"Add counts tibble cases","code":""},{"path":"/reference/ojo_add_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add counts to a tibble of cases — ojo_add_counts","text":"","code":"ojo_add_counts(data, vars = NULL, ...)"},{"path":"/reference/ojo_add_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add counts to a tibble of cases — ojo_add_counts","text":"data tibble returned ojo_ prefixed function vars Variable names count table include ... Placeholder future arguments","code":""},{"path":"/reference/ojo_add_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add counts to a tibble of cases — ojo_add_counts","text":"lazy tibble counts case","code":""},{"path":"/reference/ojo_add_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add counts to a tibble of cases — ojo_add_counts","text":"","code":"if (FALSE) { # \\dontrun{ ojo_tbl(\"case\") |>   filter(     year == 2024,     district == \"CLEVELAND\",     case_type == \"CF\"   ) |>   ojo_add_counts() } # }"},{"path":"/reference/ojo_add_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Add issues to civil cases — ojo_add_issues","title":"Add issues to civil cases — ojo_add_issues","text":"Add issues civil cases","code":""},{"path":"/reference/ojo_add_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add issues to civil cases — ojo_add_issues","text":"","code":"ojo_add_issues(data, vars = NULL, ...)"},{"path":"/reference/ojo_add_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add issues to civil cases — ojo_add_issues","text":"data lazy tibble civil cases vars character vector variables return ... Placeholder additional arguments","code":""},{"path":"/reference/ojo_add_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add issues to civil cases — ojo_add_issues","text":"data, lazy tibble containing resulting civil cases","code":""},{"path":"/reference/ojo_add_issues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add issues to civil cases — ojo_add_issues","text":"","code":"if (FALSE) { # \\dontrun{ ojo_civ_cases() |>  ojo_add_issues() } # }"},{"path":"/reference/ojo_add_minutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Query minutes for a given case — ojo_add_minutes","title":"Query minutes for a given case — ojo_add_minutes","text":"Query Open Justice Oklahoma database minutes case","code":""},{"path":"/reference/ojo_add_minutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query minutes for a given case — ojo_add_minutes","text":"","code":"ojo_add_minutes(data, ...)"},{"path":"/reference/ojo_add_minutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query minutes for a given case — ojo_add_minutes","text":"data lazy tibble containing cases query ... Placeholder additional arguments","code":""},{"path":"/reference/ojo_add_minutes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query minutes for a given case — ojo_add_minutes","text":"lazy tibble containing resulting cases minutes","code":""},{"path":"/reference/ojo_add_minutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query minutes for a given case — ojo_add_minutes","text":"","code":"if (FALSE) { # \\dontrun{ ojo_add_minutes() } # }"},{"path":"/reference/ojo_add_party_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Add party details to a parties query — ojo_add_party_details","title":"Add party details to a parties query — ojo_add_party_details","text":"Query Open Justice Oklahoma database party details","code":""},{"path":"/reference/ojo_add_party_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add party details to a parties query — ojo_add_party_details","text":"","code":"ojo_add_party_details(data, vars = NULL, ...)"},{"path":"/reference/ojo_add_party_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add party details to a parties query — ojo_add_party_details","text":"data lazy tibble containing results parties query vars character vector variables return ... Placeholder additional arguments","code":""},{"path":"/reference/ojo_add_party_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add party details to a parties query — ojo_add_party_details","text":"data, lazy tibble containing resulting party details","code":""},{"path":"/reference/ojo_add_party_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add party details to a parties query — ojo_add_party_details","text":"","code":"if (FALSE) { # \\dontrun{ ojo_add_party_details() } # }"},{"path":"/reference/ojo_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Create configuration for OJO database connection — ojo_auth","title":"Create configuration for OJO database connection — ojo_auth","text":"Configure credentials Open Justice Oklahoma database","code":""},{"path":"/reference/ojo_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create configuration for OJO database connection — ojo_auth","text":"","code":"ojo_auth(   host,   port,   username,   password,   ...,   .admin = F,   .overwrite = T,   .install = T )"},{"path":"/reference/ojo_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create configuration for OJO database connection — ojo_auth","text":"host host name database server port port number database server username username use connect database password password use connect database ... Placeholder additional arguments .admin logical value indicating whether connect database administrator .overwrite logical value indicating whether overwrite existing .Renviron file .install logical value indicating whether install database connection use current session","code":""},{"path":"/reference/ojo_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create configuration for OJO database connection — ojo_auth","text":"Nothing","code":""},{"path":"/reference/ojo_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create configuration for OJO database connection — ojo_auth","text":"Assists user populating .Renviron file necessary environment variables connect Open Justice Oklahoma database.","code":""},{"path":"/reference/ojo_auth.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"Create configuration for OJO database connection — ojo_auth","text":"first time function run, prompt user username, password, host name. store credentials user's .Renviron file. .Renviron file already exists, backed new credentials appended end file. .Renviron file exist, created credentials stored .","code":""},{"path":"/reference/ojo_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create configuration for OJO database connection — ojo_auth","text":"","code":"if (FALSE) { # \\dontrun{ ojo_auth() } # }"},{"path":"/reference/ojo_case_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List the case types present in the OJO database — ojo_case_types","title":"List the case types present in the OJO database — ojo_case_types","text":"Returns tibble containing case types present OJO database","code":""},{"path":"/reference/ojo_case_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the case types present in the OJO database — ojo_case_types","text":"","code":"ojo_case_types()"},{"path":"/reference/ojo_case_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the case types present in the OJO database — ojo_case_types","text":"Tibble case types","code":""},{"path":"/reference/ojo_case_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the case types present in the OJO database — ojo_case_types","text":"","code":"if (FALSE) { # \\dontrun{ ojo_case_types() } # }"},{"path":"/reference/ojo_check_ssl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the database connection is using SSL properly — ojo_check_ssl","title":"Check whether the database connection is using SSL properly — ojo_check_ssl","text":"Check whether database connection using SSL properly","code":""},{"path":"/reference/ojo_check_ssl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the database connection is using SSL properly — ojo_check_ssl","text":"","code":"ojo_check_ssl(..., .con = NULL)"},{"path":"/reference/ojo_check_ssl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the database connection is using SSL properly — ojo_check_ssl","text":"... Placeholder .con ojodb connection use","code":""},{"path":"/reference/ojo_check_ssl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the database connection is using SSL properly — ojo_check_ssl","text":"logical indicator whether db connection properly using SSL","code":""},{"path":"/reference/ojo_check_ssl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether the database connection is using SSL properly — ojo_check_ssl","text":"","code":"if (FALSE) { # \\dontrun{ # Identifies the table ojo_check_ssl() } # }"},{"path":"/reference/ojo_civ_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Query civil cases from the OJO database — ojo_civ_cases","title":"Query civil cases from the OJO database — ojo_civ_cases","text":"Query Open Justice Oklahoma database civil cases case type 'SC' (small claims)","code":""},{"path":"/reference/ojo_civ_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query civil cases from the OJO database — ojo_civ_cases","text":"","code":"ojo_civ_cases(   districts = \"all\",   vars = NULL,   case_types = c(\"CS\", \"SC\", \"CJ\"),   file_years = lubridate::year(Sys.Date()),   ... )"},{"path":"/reference/ojo_civ_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query civil cases from the OJO database — ojo_civ_cases","text":"districts character vector districts query vars character vector variables return case_types character vector case types query file_years character vector years query ... Placeholder additional arguments","code":""},{"path":"/reference/ojo_civ_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query civil cases from the OJO database — ojo_civ_cases","text":"data, lazy tibble containing resulting civil cases","code":""},{"path":"/reference/ojo_civ_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query civil cases from the OJO database — ojo_civ_cases","text":"","code":"if (FALSE) { # \\dontrun{ ojo_civ_cases() ojo_civ_cases(districts = c(\"TULSA\", \"ADAIR\")) ojo_civ_cases(vars = \"all\") ojo_civ_cases(vars = c(\"updated_at\", \"created_at\")) } # }"},{"path":"/reference/ojo_collect.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Collect — ojo_collect","title":"OJO Collect — ojo_collect","text":"wrapper dplyr::collect() includes progress bar Pull lazy tibble local environment OJO database, using ojo_crim_cases(), ojo_civ_cases(), etc.","code":""},{"path":"/reference/ojo_collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Collect — ojo_collect","text":"","code":"ojo_collect(.data, ..., .silent = !rlang::is_interactive())"},{"path":"/reference/ojo_collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Collect — ojo_collect","text":".data lazy tibble pulled ... Placeholder additional arguments .silent command line interface elements shown? Defaults TRUE user interactive session, FALSE .","code":""},{"path":"/reference/ojo_collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OJO Collect — ojo_collect","text":"local tibble","code":""},{"path":"/reference/ojo_collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OJO Collect — ojo_collect","text":"","code":"if (FALSE) { # \\dontrun{ ojo_crim_cases() |>  head(100) |>  ojo_collect() } # }"},{"path":"/reference/ojo_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Add OJO styling to a ggplot — ojo_color","title":"Add OJO styling to a ggplot — ojo_color","text":"Add OJO styling ggplot","code":""},{"path":"/reference/ojo_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add OJO styling to a ggplot — ojo_color","text":"","code":"ojo_color(numbers = 1:8)"},{"path":"/reference/ojo_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add OJO styling to a ggplot — ojo_color","text":"numbers vector numbers use color palette","code":""},{"path":"/reference/ojo_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add OJO styling to a ggplot — ojo_color","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(ojo_example, aes(file_year, n_cases, color = court)) +   geom_line(size = 1.5) +   theme_ojo() +   ojo_color() +   scale_x_continuous(     breaks = 2010:2019,     limits = c(NA, 2019)   ) } # }"},{"path":"/reference/ojo_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Connect — ojo_connect","title":"OJO Connect — ojo_connect","text":"Connect Open Justice Oklahoma database","code":""},{"path":"/reference/ojo_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Connect — ojo_connect","text":"","code":"ojo_connect(   ...,   .admin = FALSE,   .driver = \"RPostgres\",   .global = lifecycle::deprecated(),   .env = ojo_env(),   .pool = FALSE )"},{"path":"/reference/ojo_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Connect — ojo_connect","text":"... Placeholder. .admin logical value indicating whether connect database administrator. .driver driver use connection. Default \"RPostgres\". \"duckdb\" also supported. .global Deprecated. connection always created specified environment, package environment default. .env environment want connection stored. .pool logical value indicating whether use connection pool {pool} package, .","code":""},{"path":"/reference/ojo_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OJO Connect — ojo_connect","text":"database connection object created RPostgres::Postgres() either pool::dbPool DBI::dbConnect","code":""},{"path":"/reference/ojo_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OJO Connect — ojo_connect","text":"Opens connection Open Justice Oklahoma database using credentials stored .Renviron file. credentials exist, prompts user, password, host name provides instructions store future sessions.","code":""},{"path":"/reference/ojo_connect.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"OJO Connect — ojo_connect","text":"connection object (named ojo_con ojo_pool depending .pool argument) created package environment.","code":""},{"path":[]},{"path":"/reference/ojo_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OJO Connect — ojo_connect","text":"","code":"if (FALSE) { # \\dontrun{ ojo_connect() } # }"},{"path":"/reference/ojo_county_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","title":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","text":"Summarizes manipulates PEP series return Oklahoma's population county desired years. Useful calculating per capita rates county-level data.","code":""},{"path":"/reference/ojo_county_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","text":"","code":"ojo_county_population(years)"},{"path":"/reference/ojo_county_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","text":"years numeric vector years get population data","code":""},{"path":"/reference/ojo_county_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","text":"table Oklahoma's population county year specified","code":""},{"path":"/reference/ojo_county_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get population data by county for Oklahoma from the Census Bureau's American Community Survey — ojo_county_population","text":"","code":"if (FALSE) { # \\dontrun{ ojo_county_population(2018) } # }"},{"path":"/reference/ojo_crim_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Query criminal cases from the OJO database — ojo_crim_cases","title":"Query criminal cases from the OJO database — ojo_crim_cases","text":"Query Open Justice Oklahoma database criminal cases case type 'CM' (misdemeanor) 'CF' (felony)","code":""},{"path":"/reference/ojo_crim_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query criminal cases from the OJO database — ojo_crim_cases","text":"","code":"ojo_crim_cases(   districts = \"all\",   vars = NULL,   case_types = c(\"CM\", \"CF\", \"TR\"),   file_years = 2000:lubridate::year(Sys.Date()),   ... )"},{"path":"/reference/ojo_crim_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query criminal cases from the OJO database — ojo_crim_cases","text":"districts character vector districts query vars character vector variables return case_types character vector case types query file_years character vector years query ... Placeholder additional arguments","code":""},{"path":"/reference/ojo_crim_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query criminal cases from the OJO database — ojo_crim_cases","text":"data, lazy tibble containing resulting criminal cases","code":""},{"path":"/reference/ojo_crim_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query criminal cases from the OJO database — ojo_crim_cases","text":"","code":"if (FALSE) { # \\dontrun{ ojo_crim_cases() ojo_crim_cases(districts = c(\"TULSA\", \"ADAIR\")) ojo_crim_cases(vars = \"all\") ojo_crim_cases(vars = c(\"updated_at\", \"created_at\")) } # }"},{"path":"/reference/ojo_env.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Environment — ojo_env","title":"OJO Environment — ojo_env","text":"Get environment OJO package, holds database pool object.","code":""},{"path":"/reference/ojo_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Environment — ojo_env","text":"","code":"ojo_env(...)"},{"path":"/reference/ojo_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Environment — ojo_env","text":"... Placeholder future arguments","code":""},{"path":"/reference/ojo_eviction_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Eviction Cases — ojo_eviction_cases","title":"OJO Eviction Cases — ojo_eviction_cases","text":"Collects Oklahoma eviction data specified districts (Oklahoma) user specified time frame. date_end specified, --date data collected. Function uses latest methodology use identifying eviction cases outcomes Oklahoma. methodology updated, function updated reflect changes.","code":""},{"path":"/reference/ojo_eviction_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Eviction Cases — ojo_eviction_cases","text":"","code":"ojo_eviction_cases(   districts = \"all\",   ...,   date_start = NULL,   date_end = NULL,   more_case_variables = NULL,   more_issue_variables = NULL,   get_judgments = TRUE )"},{"path":"/reference/ojo_eviction_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Eviction Cases — ojo_eviction_cases","text":"districts District codes collect data (default \"\", collects data districts) ... Placeholder additional arguments date_start Start date data collection period date_end End date data collection period (default NULL, collects --date data) more_case_variables Additional variables case table include output more_issue_variables Additional variables issue table include output get_judgments Logical value indicating whether include eviction judgment information output","code":""},{"path":"/reference/ojo_eviction_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OJO Eviction Cases — ojo_eviction_cases","text":"dataframe containing eviction data","code":""},{"path":"/reference/ojo_eviction_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OJO Eviction Cases — ojo_eviction_cases","text":"","code":"if (FALSE) { # \\dontrun{ ojo_eviction_cases() ojo_eviction_cases(districts = c(\"TULSA\", \"ADAIR\")) ojo_eviction_cases(   districts = c(\"TULSA\", \"ADAIR\"),   date_start = \"2020-01-01\",   date_end = \"2020-01-31\",   more_issue_variables = disposition_date ) ojo_eviction_cases(   districts = c(\"TULSA\", \"ADAIR\"),   get_judgments = TRUE ) } # }"},{"path":"/reference/ojo_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Add OJO styling to a ggplot — ojo_fill","title":"Add OJO styling to a ggplot — ojo_fill","text":"Add OJO styling ggplot","code":""},{"path":"/reference/ojo_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add OJO styling to a ggplot — ojo_fill","text":"","code":"ojo_fill(numbers = 1:8)"},{"path":"/reference/ojo_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add OJO styling to a ggplot — ojo_fill","text":"numbers vector numbers use color palette","code":""},{"path":"/reference/ojo_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add OJO styling to a ggplot — ojo_fill","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(ojo_example, aes(file_year, n_cases, color = court)) +   geom_line(size = 1.5) +   theme_ojo() +   ojo_color() +   scale_x_continuous(     breaks = 2010:2019,     limits = c(NA, 2019)   ) } # }"},{"path":"/reference/ojo_fiscal_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","title":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","text":"Returns Oklahoma state fiscal year (July 1 - June 30) given Date falls.","code":""},{"path":"/reference/ojo_fiscal_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","text":"","code":"ojo_fiscal_year(date)"},{"path":"/reference/ojo_fiscal_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","text":"date atomic value class Date","code":""},{"path":"/reference/ojo_fiscal_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","text":"Fiscal year Date integer","code":""},{"path":"/reference/ojo_fiscal_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the Oklahoma state fiscal year that a Date falls in — ojo_fiscal_year","text":"","code":"if (FALSE) { # \\dontrun{ ojo_fiscal_year(ymd(\"2018-06-30\")) # Returns 2018  ojo_fiscal_year(ymd(\"2018-07-01\")) # Returns 2019 } # }"},{"path":"/reference/ojo_list_schemas.html","id":null,"dir":"Reference","previous_headings":"","what":"List all schemas on the OJO database — ojo_list_schemas","title":"List all schemas on the OJO database — ojo_list_schemas","text":"Query Open Justice Oklahoma database names schemas","code":""},{"path":"/reference/ojo_list_schemas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all schemas on the OJO database — ojo_list_schemas","text":"","code":"ojo_list_schemas(..., .con = NULL)"},{"path":"/reference/ojo_list_schemas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all schemas on the OJO database — ojo_list_schemas","text":"... Placeholder .con OJO database connection use","code":""},{"path":"/reference/ojo_list_schemas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all schemas on the OJO database — ojo_list_schemas","text":"data, tibble containing names schemas","code":""},{"path":"/reference/ojo_list_schemas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all schemas on the OJO database — ojo_list_schemas","text":"","code":"if (FALSE) { # \\dontrun{ ojo_list_schemas() } # }"},{"path":"/reference/ojo_list_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List all tables on the OJO database — ojo_list_tables","title":"List all tables on the OJO database — ojo_list_tables","text":"Query Open Justice Oklahoma database names tables","code":""},{"path":"/reference/ojo_list_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all tables on the OJO database — ojo_list_tables","text":"","code":"ojo_list_tables(schema = \"public\", ..., .con = NULL)"},{"path":"/reference/ojo_list_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all tables on the OJO database — ojo_list_tables","text":"schema name schema query ... Placeholder additional arguments .con OJO database connection use","code":""},{"path":"/reference/ojo_list_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all tables on the OJO database — ojo_list_tables","text":"data, tibble containing names tables","code":""},{"path":"/reference/ojo_list_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all tables on the OJO database — ojo_list_tables","text":"","code":"if (FALSE) { # \\dontrun{ ojo_list_tables() ojo_list_tables(\"all\") ojo_list_tables(\"iic\") } # }"},{"path":"/reference/ojo_list_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"List all variables in a table on the ojodb database — ojo_list_vars","title":"List all variables in a table on the ojodb database — ojo_list_vars","text":"Query Open Justice Oklahoma database names variables table","code":""},{"path":"/reference/ojo_list_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all variables in a table on the ojodb database — ojo_list_vars","text":"","code":"ojo_list_vars(table, schema = \"public\", ..., .con = NULL)"},{"path":"/reference/ojo_list_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all variables in a table on the ojodb database — ojo_list_vars","text":"table name table query schema name schema query ... Placeholder additional arguments .con ojodb connection use","code":""},{"path":"/reference/ojo_list_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all variables in a table on the ojodb database — ojo_list_vars","text":"data, tibble containing names variables table","code":""},{"path":"/reference/ojo_list_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all variables in a table on the ojodb database — ojo_list_vars","text":"","code":"if (FALSE) { # \\dontrun{ ojo_list_vars(\"case\") ojo_list_vars(\"inmate\", \"iic\") } # }"},{"path":"/reference/ojo_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add OJO styling to a ggplot — ojo_pal","title":"Add OJO styling to a ggplot — ojo_pal","text":"Add OJO styling ggplot","code":""},{"path":"/reference/ojo_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add OJO styling to a ggplot — ojo_pal","text":"","code":"ojo_pal"},{"path":"/reference/ojo_pal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Add OJO styling to a ggplot — ojo_pal","text":"object class character length 8.","code":""},{"path":"/reference/ojo_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add OJO styling to a ggplot — ojo_pal","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(ojo_example, aes(file_year, n_cases, color = court)) +   geom_line(size = 1.5) +   theme_ojo() +   ojo_color() +   scale_x_continuous(     breaks = 2010:2019,     limits = c(NA, 2019)   ) } # }"},{"path":"/reference/ojo_query.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Query — ojo_query","title":"OJO Query — ojo_query","text":"Query Open Justice Oklahoma database","code":""},{"path":"/reference/ojo_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Query — ojo_query","text":"","code":"ojo_query(query, ..., .con = NULL)"},{"path":"/reference/ojo_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Query — ojo_query","text":"query query send ojodb ... Arguments pass glue::glue_sql .con ojodb connection use","code":""},{"path":"/reference/ojo_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OJO Query — ojo_query","text":"data, lazy tibble containing results query","code":""},{"path":"/reference/ojo_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OJO Query — ojo_query","text":"","code":"if (FALSE) { # \\dontrun{ ojo_query(\"SELECT * FROM \\\"case\\\" LIMIT 10\") ojo_query(\"SELECT * FROM iic.inmate LIMIT 10\") } # }"},{"path":"/reference/ojo_search_minutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Query minutes for a given search term — ojo_search_minutes","title":"Query minutes for a given search term — ojo_search_minutes","text":"Query Open Justice Oklahoma database minutes matching search term","code":""},{"path":"/reference/ojo_search_minutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query minutes for a given search term — ojo_search_minutes","text":"","code":"ojo_search_minutes(query, ..., .con = NULL, .silent = F)"},{"path":"/reference/ojo_search_minutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query minutes for a given search term — ojo_search_minutes","text":"query term phrase search using PostgreSQL full text search syntax ... Placeholder .con OJO connection use .silent command line interface elements shown? Defaults TRUE user interactive session, FALSE .","code":""},{"path":"/reference/ojo_search_minutes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query minutes for a given search term — ojo_search_minutes","text":"data, lazy tibble containing resulting minutes","code":""},{"path":"/reference/ojo_search_minutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query minutes for a given search term — ojo_search_minutes","text":"","code":"if (FALSE) { # \\dontrun{  # Minutes containing words like 'mcgirt' ojo_search_minutes(\"mcgirt\")  # Minutes containing 'mcgirt' AND 'jursdiction ojo_search_minutes(\"mcgirt & jurisdiction\")  # Minutes containing 'mcgirt' OR 'jurisdiction ojo_search_minutes(\"mcgirt | jurisdiction\")  # Minutes NOT containing 'mcgirt' ## Use sparingly! It is likely to return rows in the hundreds of thousands or millions! ojo_search_minutes(\"!! mcgirt\")  # Minutes containing 'tribal' FOLLOWED BY 'jurisdiction' ojo_search_minutes(\"tribal <-> jurisdiction\") } # }"},{"path":"/reference/ojo_show_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse the source court record of a row — ojo_show_row","title":"Browse the source court record of a row — ojo_show_row","text":"Displays OSCN court record given row dataframe columns named court casenum","code":""},{"path":"/reference/ojo_show_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse the source court record of a row — ojo_show_row","text":"","code":"ojo_show_row(df, row_number)"},{"path":"/reference/ojo_show_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse the source court record of a row — ojo_show_row","text":"df local dataframe columns named court casenum row_number number row case shown","code":""},{"path":"/reference/ojo_show_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse the source court record of a row — ojo_show_row","text":"Nothing","code":""},{"path":"/reference/ojo_show_row.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side effects","title":"Browse the source court record of a row — ojo_show_row","text":"Opens browser window OSCN court record","code":""},{"path":"/reference/ojo_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify a table from the OJO database — ojo_tbl","title":"Identify a table from the OJO database — ojo_tbl","text":"Identifies table OJO database query data. Remember run connect_ojo() establish connection attempting query close connection afterwards disconnect_ojo().","code":""},{"path":"/reference/ojo_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify a table from the OJO database — ojo_tbl","text":"","code":"ojo_tbl(table, schema = \"public\", ..., .con = NULL, .source = \"postgres\")"},{"path":"/reference/ojo_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify a table from the OJO database — ojo_tbl","text":"table name table OJO database. get list tables, run ojo_list_tables() schema name schema OJO database. get list schemas, run ojo_list_schemas() ... Placeholder .con ojodb connection use .source source table. Options 'postgres', 'gcs_duckdb', 'gcs_arrow'. Default 'postgres'.","code":""},{"path":"/reference/ojo_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify a table from the OJO database — ojo_tbl","text":"pointer table can passed dplyr functions /pulled dataframe using ojo_collect()","code":""},{"path":[]},{"path":"/reference/ojo_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify a table from the OJO database — ojo_tbl","text":"","code":"if (FALSE) { # \\dontrun{ # Identifies the table ojo_tbl(\"case\")  # Pulls down case information data for every Tulsa felony filed in 2020 into a dataframe d d <- ojo_tbl(\"case\") %>%   filter(district == \"TULSA\", case_type == \"CF\", year == 2020) %>%   collect() } # }"},{"path":"/reference/ojo_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Style a ggplot in the OJO style — ojo_theme","title":"Style a ggplot in the OJO style — ojo_theme","text":"Add OJO styling ggplot","code":""},{"path":"/reference/ojo_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style a ggplot in the OJO style — ojo_theme","text":"","code":"ojo_theme()"},{"path":"/reference/ojo_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style a ggplot in the OJO style — ojo_theme","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(ojo_example, aes(file_year, n_cases, color = court)) +   geom_line(size = 1.5) +   ojo_theme() +   ojo_colors() +   scale_x_continuous(     breaks = 2010:2019,     limits = c(NA, 2019)   ) } # }"},{"path":"/reference/ojo_version.html","id":null,"dir":"Reference","previous_headings":"","what":"OJO Version — ojo_version","title":"OJO Version — ojo_version","text":"Returns version ojodb package.","code":""},{"path":"/reference/ojo_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OJO Version — ojo_version","text":"","code":"ojo_version(...)"},{"path":"/reference/ojo_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OJO Version — ojo_version","text":"... Placeholder future arguments","code":""},{"path":"/reference/ojo_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OJO Version — ojo_version","text":"character vector containing version number ojodb package.","code":""},{"path":"/reference/skip_if_no_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip If No Database Connection — skip_if_no_db","title":"Skip If No Database Connection — skip_if_no_db","text":"Skips test ojodb package installed user connected OJO database.","code":""},{"path":"/reference/skip_if_no_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip If No Database Connection — skip_if_no_db","text":"","code":"skip_if_no_db()"},{"path":"/reference/tbl_from_gcs_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from Google Cloud Storage — tbl_from_gcs_arrow","title":"Fetch data from Google Cloud Storage — tbl_from_gcs_arrow","text":"Fetch data Google Cloud Storage","code":""},{"path":"/reference/tbl_from_gcs_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from Google Cloud Storage — tbl_from_gcs_arrow","text":"","code":"tbl_from_gcs_arrow(schema, table, anonymous = TRUE)"},{"path":"/reference/tbl_from_gcs_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from Google Cloud Storage — tbl_from_gcs_arrow","text":"schema schema (directory) name Google Cloud Storage. table table (file) name fetch. anonymous Logical, whether access GCS anonymously (default: TRUE).","code":""},{"path":"/reference/tbl_from_gcs_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from Google Cloud Storage — tbl_from_gcs_arrow","text":"dataset object specified GCS path.","code":""},{"path":"/reference/tbl_from_gcs_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from Google Cloud Storage using duckdb — tbl_from_gcs_duckdb","title":"Fetch data from Google Cloud Storage using duckdb — tbl_from_gcs_duckdb","text":"Fetch data Google Cloud Storage using duckdb","code":""},{"path":"/reference/tbl_from_gcs_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from Google Cloud Storage using duckdb — tbl_from_gcs_duckdb","text":"","code":"tbl_from_gcs_duckdb(con, schema, table)"},{"path":"/reference/tbl_from_gcs_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from Google Cloud Storage using duckdb — tbl_from_gcs_duckdb","text":"schema schema (directory) name Google Cloud Storage. table table (file) name fetch.","code":""},{"path":"/reference/tbl_from_gcs_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from Google Cloud Storage using duckdb — tbl_from_gcs_duckdb","text":"lazy duckdb result","code":""},{"path":"/reference/tbl_from_rpostgres.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from a database — tbl_from_rpostgres","title":"Fetch data from a database — tbl_from_rpostgres","text":"Fetch data database","code":""},{"path":"/reference/tbl_from_rpostgres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from a database — tbl_from_rpostgres","text":"","code":"tbl_from_rpostgres(con, schema, table)"},{"path":"/reference/tbl_from_rpostgres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from a database — tbl_from_rpostgres","text":"con database connection object. schema schema name database. table table name fetch.","code":""},{"path":"/reference/tbl_from_rpostgres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from a database — tbl_from_rpostgres","text":"dplyr tbl object connected specified table.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-2-11-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"ojodb 2.11.0 (2025-03-25)","text":"ojo_query now returns lazy tibble!","code":""},{"path":"/news/index.html","id":"bug-fixes-2-11-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"ojodb 2.11.0 (2025-03-25)","text":"ojo_add_counts (internally used ojo_crim_cases) now uses count table get counts OCIS districts.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-2-10-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"ojodb 2.10.0 (2024-08-01)","text":"Adds ojo_eviction_cases nice helper users, version control eviction identification methodology.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-2-9-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"ojodb 2.9.0 (2024-06-10)","text":"Adds initial support DuckDB","code":""},{"path":[]},{"path":"/news/index.html","id":"dependency-fix-2-8-1","dir":"Changelog","previous_headings":"","what":"Dependency Fix","title":"ojodb 2.8.1 (2024-05-23)","text":"Makes arrow optional dependency checks whether available source = \"gcs\" used ojo_tbl.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-2-8-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"ojodb 2.8.0 (2024-05-20)","text":"Adds initial support Arrow.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-8-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.8.0 (2024-05-20)","text":"Uses lifecycle function development status.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-2-7-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"ojodb 2.7.0 (2023-09-01)","text":"Fixed bugs ojo_auth() prevented successfully backing .Renviron file.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-7-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.7.0 (2023-09-01)","text":"Changed Base R file paths fs package. Adjusted GitHub Actions workflows run draft PRs. Added spellcheck GitHub Actions. Changed SSL certs use .pem extensions","code":""},{"path":"/news/index.html","id":"analyst-tools-2-7-0","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.7.0 (2023-09-01)","text":"ojo_search_minutes() now allows queries include space. Postgres operators like |, <->, !! still work ; queries spaces now wrapped quotes treated single search string. ojo_crim_cases() ojo_civ_cases() changed make case_type argument longer case-sensitive. also throws error now ask nonexistent values case_type.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-2-6-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"ojodb 2.6.1","text":"Fixed bug related rlang package. Removed renv development environment favor package management using DESCRIPTION file. affect development package going forward, shouldn’t affect analysts’ use package.","code":""},{"path":[]},{"path":"/news/index.html","id":"aesthetics-2-6-0","dir":"Changelog","previous_headings":"","what":"Aesthetics","title":"ojodb 2.6.0","text":"fun loading message now appear package loaded. can disabled setting OJO_LOAD_MESSAGE=FALSE local R environment. ojodb package now tidyverse-compliant sticker design.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-6-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.6.0","text":"ojo_list_ functions (ojo_list_schemas(), ojo_list_tables(), ojo_list_vars()) now return sorted list instead unsorted one. Documentation namespacing errors (e.g. dplyr functions missing explicit .data reference, missing namespace prefixes, etc.) corrected. Consequently, devtools::check() now passes minimal warnings / notes.","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-5-0","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.5.0 (2023-04-18)","text":"can now use ojo_collect collect progress bar helpful information.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-5-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.5.0 (2023-04-18)","text":"Added ojo_version function return version package. Useful debugging.","code":""},{"path":[]},{"path":"/news/index.html","id":"package-maintenance-2-4-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.4.0 (2023-04-13)","text":"Exposed ojo_env function easily access package-level environment database connections stored. Changed default behavior ojo_connect use DBI::dbConnect() instead pool::dbPool(). Connection pools still available passing pool = TRUE ojo_connect.","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-3-4","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.3.4 (2023-04-13)","text":"can now cancel queries immediately Ctrl + c Cmd + c console.","code":""},{"path":[]},{"path":"/news/index.html","id":"package-maintenance-2-3-3","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.3.3 (2023-04-12)","text":"Implemented schema scoping ojo_tbl using DBI::Id() instead dbplyr::in_schema() match common practice.","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-3-2","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.3.2 (2023-03-28)","text":"Allows lowercase inputs district argument ojo_civ_cases ojo_crim_cases longer need import dplyr manually! Database connections handled default. won’t even know ’s .","code":""},{"path":"/news/index.html","id":"package-maintenance-2-3-2","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.3.2 (2023-03-28)","text":"Added Github Actions automated package checks Added dplyr Depends field package Description Overhauled database connection management using package-level environment scoping. See ojo_connect, ojo_tbl, ojo_query information. Replaced odbc dependency RPostgres","code":""},{"path":[]},{"path":"/news/index.html","id":"package-maintenance-2-3-1","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.3.1 (2023-03-02)","text":"Add SQL file create database roles Bump renv version 0.17.0 Add docs/ folder .gitignore Add dontrun examples","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-3-0","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.3.0 (2023-03-02)","text":"Fixed ojo_list_vars function","code":""},{"path":"/news/index.html","id":"package-maintenance-2-3-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.3.0 (2023-03-02)","text":"Removed direct class comparisons favor inherits Added documentation ojo_add_issues function Removed improper data import resulting hard dependency readr","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-2-0","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.2.0 (2022-11-09)","text":"Added ojo_county_population function, return population Oklahoma counties given years, format ready join OJO tables.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-2-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.2.0 (2022-11-09)","text":"Pruned many dependencies possible moved many Suggests. Added person() syntax DESCRIPTION.","code":""},{"path":[]},{"path":"/news/index.html","id":"analyst-tools-2-1-0","dir":"Changelog","previous_headings":"","what":"Analyst Tools","title":"ojodb 2.1.0 (2022-05-03)","text":"Added function ojo_fiscal_year return fiscal year given Date. Removed ojo_table alias consistency transparency.","code":""},{"path":"/news/index.html","id":"package-maintenance-2-1-0","dir":"Changelog","previous_headings":"","what":"Package Maintenance","title":"ojodb 2.1.0 (2022-05-03)","text":"Added NEWS.md file track changes package. Changed file name png portability.","code":""}]
