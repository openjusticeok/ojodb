# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  pull_request:
    types: [review_requested, ready_for_review]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # Configuring ojodb access for github actions
      OJO_HOST: ${{ secrets.OJO_HOST }}
      OJO_PORT: ${{ secrets.OJO_PORT }}
      OJO_DEFAULT_USER: ${{ secrets.OJO_DEFAULT_USER }}
      OJO_DEFAULT_PASS: ${{ secrets.OJO_DEFAULT_PASS }}
      OJO_SSL_MODE: ${{ secrets.OJO_SSL_MODE }}
      # Encoded secrets
      OJO_SSL_CERT_BASE64: ${{ secrets.OJO_SSL_CERT_BASE64 }}
      OJO_SSL_ROOT_CERT_BASE64: ${{ secrets.OJO_SSL_ROOT_CERT_BASE64 }}
      OJO_SSL_KEY_BASE64: ${{ secrets.OJO_SSL_KEY_BASE64 }}
      #
      OJO_SSL_CERT: ${{ github.workspace }}/certs/client-cert.pem
      OJO_SSL_ROOT_CERT: ${{ github.workspace }}/certs/server-ca.pem
      OJO_SSL_KEY: ${{ github.workspace }}/certs/client-key.pk8

    steps:

      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Decode secrets
        run: |
          mkdir ${{ github.workspace }}/certs
          echo "$OJO_SSL_CERT_BASE64" | base64 --decode > ${{ github.workspace }}/certs/client-cert.pem
          echo "$OJO_SSL_ROOT_CERT_BASE64" | base64 --decode > ${{ github.workspace }}/certs/server-ca.pem
          echo "$OJO_SSL_KEY_BASE64" | base64 --decode > ${{ github.workspace }}/certs/client-key.pk8
          chmod 0600 ${{ github.workspace }}/certs/client-key.pk8

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
